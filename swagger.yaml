openapi: 3.0.0
info:
  title: Trantegory LLM Backend API
  description: |
    API for automatically categorizing income and expense transactions using LLM.
    The service uses Mistral-7B to analyze natural language input and categorize financial transactions.
  version: 1.0.0
  contact:
    name: Trantegory Support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3001/api
    description: Local development server

tags:
  - name: Transactions
    description: Transaction categorization endpoints
  - name: AI Chat
    description: AI-powered financial chat interface

paths:
  /transactions/categorize:
    post:
      tags:
        - Transactions
      summary: Categorize transactions from text
      description: |
        Takes natural language text containing transaction descriptions and amounts,
        and returns categorized transactions using LLM analysis.
      operationId: categorizeTransactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorizeRequest'
            example:
              text: "coffee 20$, Used laptop 500"
              categories:
                - id: "1"
                  name: "Groceries"
                  type: "expense"
                - id: "14"
                  name: "Other Income"
                  type: "income"
      responses:
        '200':
          description: Successfully categorized transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
              example:
                - amount: 20
                  type: "expense"
                  description: "Coffee"
                  categoryId: "1"
                  date: "2024-03-16T17:48:42.549Z"
                  id: "b9a23f22-efe2-44f2-8ae1-f929e1d8bb05"
                - amount: 500
                  type: "expense"
                  description: "Used laptop"
                  categoryId: "1"
                  date: "2024-03-16T17:48:42.549Z"
                  id: "723df0e7-da27-45cf-8bf2-df705c7aead9"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Missing required fields: text and categories are required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Failed to process transactions"
                message: "LLM service unavailable"

  /transactions/chat:
    post:
      tags:
        - AI Chat
      summary: AI-powered financial chat interface
      description: |
        Process natural language queries about financial transactions and get AI-powered responses.
        Can handle both transaction categorization and financial queries.
      operationId: processAIChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIChatRequest'
            example:
              prompt: "Show me my cat expenses for this month"
              categories:
                - id: "1"
                  name: "Groceries"
                  type: "expense"
                - id: "2"
                  name: "Pets"
                  type: "expense"
              entries:
                - amount: 50
                  type: "expense"
                  description: "Cat food"
                  categoryId: "2"
                  date: "2024-03-15T10:00:00Z"
                  id: "123e4567-e89b-12d3-a456-426614174000"
              currency: "USD"
      responses:
        '200':
          description: Successful AI chat response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIChatResponse'
              example:
                type: "query_response"
                message: "Here are your cat expenses for this month"
                data:
                  query_type: "category_summary"
                  results:
                    - amount: 50
                      type: "expense"
                      description: "Cat food"
                      categoryId: "2"
                      date: "2024-03-15T10:00:00Z"
                      id: "123e4567-e89b-12d3-a456-426614174000"
                  summary:
                    total_amount: 50
                    count: 1
                    period: "this_month"
                timestamp: "2024-03-16T17:48:42.549Z"
        '400':
          description: Bad request - missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Missing required fields: prompt and categories are required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Failed to process AI chat request"
                message: "LLM service unavailable"

components:
  schemas:
    Category:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the category
        name:
          type: string
          description: Display name of the category
        type:
          type: string
          enum: [income, expense]
          description: Type of the category

    Transaction:
      type: object
      required:
        - amount
        - type
        - description
        - categoryId
        - date
        - id
      properties:
        amount:
          type: number
          description: Transaction amount without currency symbols
        type:
          type: string
          enum: [income, expense]
          description: Type of transaction
        description:
          type: string
          description: Description of the transaction
        categoryId:
          type: string
          description: ID of the matched category
        date:
          type: string
          format: date-time
          description: Timestamp of the transaction
        id:
          type: string
          format: uuid
          description: Unique identifier for the transaction

    CategorizeRequest:
      type: object
      required:
        - text
        - categories
      properties:
        text:
          type: string
          description: Raw text containing transaction descriptions and amounts
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          description: List of available categories

    AIChatRequest:
      type: object
      required:
        - prompt
        - categories
      properties:
        prompt:
          type: string
          description: User's query or transaction text
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          description: List of available categories
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: Previous transaction entries
        currency:
          type: string
          description: Currency code (e.g., USD, EUR)
          default: USD

    AIChatResponse:
      type: object
      required:
        - type
        - message
        - data
        - timestamp
      properties:
        type:
          type: string
          enum: [categorization, query_response]
          description: Type of response
        message:
          type: string
          description: AI's response message
        data:
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/Transaction'
              description: Array of categorized transactions
            - type: object
              properties:
                query_type:
                  type: string
                  description: Type of query response
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
                  description: Matching transactions
                summary:
                  type: object
                  description: Query result summary
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
        message:
          type: string
          description: Additional error details 